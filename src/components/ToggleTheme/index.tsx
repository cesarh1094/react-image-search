import React, { FC } from 'react';
import { useThemeContext } from '../../context/ThemeContext/ThemeContext';

import styles from './toggleTheme.module.scss';

const LightThemeToggler: FC = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      className={'light-icon'}
      viewBox="0 0 470 470">
      <style
        dangerouslySetInnerHTML={{
          __html: ` .light-icon {
                      fill: white;
                  }`,
        }}></style>
      <path d="m235 104.605469c-72.015625 0-130.394531 58.378906-130.394531 130.394531s58.378906 130.394531 130.394531 130.394531 130.394531-58.378906 130.394531-130.394531c-.082031-71.980469-58.414062-130.3125-130.394531-130.394531zm0 240.789062c-60.96875 0-110.394531-49.425781-110.394531-110.394531s49.425781-110.394531 110.394531-110.394531 110.394531 49.425781 110.394531 110.394531c-.070312 60.941406-49.453125 110.324219-110.394531 110.394531zm0 0" />
      <path d="m245 61v-51c0-5.523438-4.476562-10-10-10s-10 4.476562-10 10v51c0 5.523438 4.476562 10 10 10s10-4.476562 10-10zm0 0" />
      <path d="m235 399c-5.523438 0-10 4.476562-10 10v51c0 5.523438 4.476562 10 10 10s10-4.476562 10-10v-51c0-5.523438-4.476562-10-10-10zm0 0" />
      <path d="m460 225h-51c-5.523438 0-10 4.476562-10 10s4.476562 10 10 10h51c5.523438 0 10-4.476562 10-10s-4.476562-10-10-10zm0 0" />
      <path d="m71 235c0-5.523438-4.476562-10-10-10h-51c-5.523438 0-10 4.476562-10 10s4.476562 10 10 10h51c5.523438 0 10-4.476562 10-10zm0 0" />
      <path d="m365.257812 118.882812 35.472657-35.472656c3.878906-3.910156 3.863281-10.21875-.03125-14.109375-3.890625-3.894531-10.199219-3.910156-14.109375-.03125l-35.472656 35.472657c-2.542969 2.519531-3.546876 6.210937-2.625 9.675781.925781 3.460937 3.628906 6.164062 7.089843 7.089843 3.464844.921876 7.15625-.082031 9.675781-2.625zm0 0" />
      <path d="m104.742188 351.117188-35.472657 35.472656c-2.546875 2.523437-3.546875 6.214844-2.625 9.675781s3.628907 6.167969 7.089844 7.089844 7.152344-.078125 9.675781-2.625l35.472656-35.472657c2.542969-2.519531 3.546876-6.210937 2.625-9.675781-.925781-3.460937-3.628906-6.164062-7.089843-7.089843-3.464844-.921876-7.15625.082031-9.675781 2.625zm0 0" />
      <path d="m365.257812 351.117188c-2.519531-2.542969-6.210937-3.546876-9.675781-2.625-3.460937.925781-6.164062 3.628906-7.089843 7.089843-.921876 3.464844.082031 7.15625 2.625 9.675781l35.472656 35.472657c3.910156 3.878906 10.21875 3.863281 14.109375-.03125 3.894531-3.890625 3.910156-10.199219.03125-14.109375zm0 0" />
      <path d="m104.742188 118.882812c2.519531 2.542969 6.210937 3.546876 9.675781 2.625 3.460937-.925781 6.164062-3.628906 7.089843-7.089843.921876-3.464844-.082031-7.15625-2.625-9.675781l-35.472656-35.472657c-3.910156-3.878906-10.21875-3.863281-14.109375.03125-3.894531 3.890625-3.910156 10.199219-.03125 14.109375zm0 0" />
    </svg>
  );
};

const DarkThemeToggler: FC = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      version="1.1"
      id="Capa_1"
      x="0px"
      y="0px"
      viewBox="0 0 312.999 312.999">
      <g>
        <path d="M305.6,178.053c-3.2-0.8-6.4,0-9.2,2c-10.4,8.8-22.4,16-35.6,20.8c-12.4,4.8-26,7.2-40.4,7.2c-32.4,0-62-13.2-83.2-34.4    c-21.2-21.2-34.4-50.8-34.4-83.2c0-13.6,2.4-26.8,6.4-38.8c4.4-12.8,10.8-24.4,19.2-34.4c3.6-4.4,2.8-10.8-1.6-14.4    c-2.8-2-6-2.8-9.2-2c-34,9.2-63.6,29.6-84.8,56.8c-20.4,26.8-32.8,60-32.8,96.4c0,43.6,17.6,83.2,46.4,112s68.4,46.4,112,46.4    c36.8,0,70.8-12.8,98-34c27.6-21.6,47.6-52.4,56-87.6C314.4,184.853,311.2,179.253,305.6,178.053z M244.4,261.653    c-23.2,18.4-52.8,29.6-85.2,29.6c-38,0-72.4-15.6-97.2-40.4c-24.8-24.8-40.4-59.2-40.4-97.2c0-31.6,10.4-60.4,28.4-83.6    c12.4-16,28-29.2,46-38.4c-2,4.4-4,8.8-5.6,13.6c-5.2,14.4-7.6,29.6-7.6,45.6c0,38,15.6,72.8,40.4,97.6s59.6,40.4,97.6,40.4    c16.8,0,32.8-2.8,47.6-8.4c5.2-2,10.4-4,15.2-6.4C274,232.453,260.8,248.853,244.4,261.653z" />
      </g>
    </svg>
  );
};

const ToggleTheme: FC = () => {
  const { theme, setTheme } = useThemeContext();
  const isThemeLight = 'light' === theme;

  return (
    <div
      className={styles.toggleTheme}
      onClick={() => setTheme(isThemeLight ? 'dark' : 'light')}>
      {!isThemeLight ? <LightThemeToggler /> : <DarkThemeToggler />}
    </div>
  );
};

export default ToggleTheme;
